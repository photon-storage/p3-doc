# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  notification:
    runs-on: ubuntu-latest
    steps:
      - name: doc-deploy-notification
        if: ${{ github.event_name == 'push' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TG_DEV_GROUP_ID }}
          token: ${{ secrets.TG_BOT_TOKEN }}
          format: markdown
          disable_web_page_preview: true
          message: |
            *New P3 Doc Deployment*
            Repo: [p3-doc](https://github.com/photon-storage/p3-doc)
            Commit: [${{ github.event.pull_request.head.sha }}](${{ github.event.pull_request.html_url }})
            Author: [${{ github.event.pull_request.user.login }}](${{ github.event.pull_request.user.html_url }})
            Message: ```text
            ${{ github.event.pull_request.title }}
            ```
            Date: ${{ github.event.pull_request.updated_at }}
